#pragma once
/******************************************************************************/
/* File   : fixedpoint.hpp                                                    */
/* Author : Nagaraja HULIYAPURADA-MATA                                        */
/* Date   : 01.02.1982                                                        */
/******************************************************************************/

/******************************************************************************/
/* #INCLUDES                                                                  */
/******************************************************************************/

/******************************************************************************/
/* #DEFINES                                                                   */
/******************************************************************************/
#define scale_s42p21 21

/******************************************************************************/
/* MACROS                                                                     */
/******************************************************************************/
#define double_to_fixed(value_double, scale)                  ((sint64)((value_double)*(double)(1<<(scale))))
#define fixed_to_double(value_fixed,  scale)                  ((double)(value_fixed)/(double)(1<<(scale)))
#define fixed_mul_2(value_fixed_x, value_fixed_y, scale_x, scale_y, scale_output) ((((value_fixed_x)>>(scale_x))*((value_fixed_y)>>(scale_y)))>>((scale_output)-(scale_x)-(scale_y)))
#define fixed_div_2(value_fixed_x, value_fixed_y, scale_x,          scale_output) ((((value_fixed_x)<<(scale_x))/ (value_fixed_y)            )<<((scale_output)-(scale_x)          ))

/******************************************************************************/
/* TYPEDEFS                                                                   */
/******************************************************************************/
typedef sint64 s42p21;

/******************************************************************************/
/* CONSTS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* PARAMS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* OBJECTS                                                                    */
/******************************************************************************/

/******************************************************************************/
/* FUNCTIONS                                                                  */
/******************************************************************************/

/******************************************************************************/
/* EOF                                                                        */
/******************************************************************************/

